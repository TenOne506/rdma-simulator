import matplotlib.pyplot as plt
import numpy as np
import matplotlib.font_manager as fm
import os
# 设置中文字体（解决中文显示问题）
# 1. 确保字体文件存在

# 查找中文字体路径
zh_font_path = "/usr/share/fonts/truetype/wqy/wqy-microhei.ttc"  # WenQuanYi Micro Hei
zh_font = fm.FontProperties(fname=zh_font_path)

# 设置中文字体和解决负号显示问题
plt.rcParams['font.sans-serif'] = [zh_font.get_name()]  # 使用指定的字体
plt.rcParams['axes.unicode_minus'] = False  # 解决负号 '-' 显示为方块的问题

plt.rcParams.update({'font.size': 20})  # 默认字体大小
# 示例数据（X=并发数，Y=带宽）
x = [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 129, 193, 257, 321, 385, 449, 513, 577, 641, 705, 769, 833, 897, 961, 1025, 1089, 1153, 1217, 1281, 1345, 1409, 1473, 1537, 1601, 1665, 1729, 1793, 1857, 1921, 1985]
y = [1.408271, 1.545021, 1.534706, 1.510002, 1.541503, 1.553510, 1.549800, 1.507228, 1.564131, 1.562056, 1.512002, 1.540393, 1.534976, 1.538914, 1.563388, 1.544438, 1.569142, 1.566862, 1.566025, 1.550642, 1.564162, 1.562611, 1.558574, 1.538846, 1.510463, 1.481462, 1.453369, 1.506270, 1.469991, 1.487031, 1.463196, 1.419750, 1.429715, 1.449809, 1.425496, 1.416661, 1.421507, 1.379826, 1.379778, 1.373090, 1.343377, 1.360526, 1.377465, 1.363478, 1.336466, 1.342286, 1.368358, 1.376902, 1.357182, 1.373773, 1.354816, 1.327292, 1.333869, 1.376924, 1.349606, 1.372510, 1.327862, 1.352826, 1.373267, 1.357987, 1.374168, 1.334855, 1.328261, 1.378151, 1.336689, 1.323544, 1.220379, 1.222195, 1.188089, 1.126365, 1.075019, 1.036050, 1.006482, 0.932994, 0.914570, 0.882278, 0.886445, 0.845355, 0.812897, 0.773959, 0.775495, 0.753594, 0.736306, 0.730428, 0.720879, 0.718881, 0.716603, 0.713054, 0.701306, 0.660771, 0.673483, 0.681024, 0.685962, 0.674508]

plt.figure(figsize=(12, 6))
plt.plot(x, y, marker='o', linestyle='-', color='b', label='Bandwidth (GB/s)')
plt.axvline(x=20, color='r', linestyle='--', label='Peak at Concurrency=20')  # 标记峰值位置
plt.xlabel('QP 数量')
plt.ylabel('消息速率 (Mpps)')
plt.title('RDMA 读')
plt.grid(True)
plt.legend()
plt.xscale('log')  # 对数坐标更清晰显示高并发区域
plt.show()